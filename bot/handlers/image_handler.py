import logging

from aiogram import F
from aiogram import Router, Bot
from aiogram.types import Message, ContentType
from bot.misc import rabbit_manager
from bot.scripts.message_scripts import create_json_from_message

from bot.config import get_config


config = get_config()

logger = logging.getLogger(__name__)

image_router = Router()


@image_router.message(F.content_type == ContentType.PHOTO)
async def handle_photo(message: Message, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        processing_msg = await message.reply(
            "üì• –ü–æ–ª—É—á–∏–ª –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É...",
        )

        photo_bytes = await bot.download(message.photo[-1])
        photo_bytes = photo_bytes.read()

        await rabbit_manager.send_json_to_queue(
            create_json_from_message(
                message.from_user.id,
                photo_bytes,
                ),
            )

        await processing_msg.edit_text(
            "üîÑ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É.\n"
            "‚è≥ –Ø –ø—Ä–∏—à–ª—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤.",
        )

    except Exception as e:
        error_msg = f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {str(e)}"
        logger.error(error_msg)
        await message.reply(error_msg)
